/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M11
 * Generated at: 2017-08-28 09:51:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html ng-app=\"todo\">\n");
      out.write("<head>\n");
      out.write("\n");
      out.write(" \n");
      out.write("<link rel=\"icon\" href=\"images/google_keep1600.png\">\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\"\thref=\"bower_components/bootstrap-css-only/css/bootstrap.css\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"bower_components/angular-bootstrap-datetimepicker/src/css/datetimepicker.css\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/loginRegfile.css\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/home.css\">\n");
      out.write("\n");
      out.write("<!-- for uib modal work -->\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"bower_components/angular-bootstrap/ui-bootstrap-csp.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<ui-view>\n");
      out.write("\t</ui-view>\n");
      out.write("</body>\n");
      out.write("<script src=\"bower_components/jquery/dist/jquery.js\"></script>\n");
      out.write("<script src=\"bower_components/angular/angular.js\"></script>\n");
      out.write("<script\tsrc=\"bower_components/angular-ui-router/release/angular-ui-router.js\"></script>\n");
      out.write("<script src=\"bower_components/bootstrap/dist/js/bootstrap.js\"></script>\n");
      out.write("<script src=\"js/app.js\"></script>\n");
      out.write("<script src=\"js/controller/userLoginController.js\"></script>\n");
      out.write("<script src=\"js/controller/userRegController.js\"></script>\n");
      out.write("<script src=\"js/controller/homeController.js\"></script>\n");
      out.write("<script src=\"js/service/todoservice.js\"></script>\n");
      out.write("<script src=\"js/controller/archivecontroller.js\"></script>\n");
      out.write("<script src=\"js/controller/trashcontroller.js\"></script>\n");
      out.write("<script src=\"js/controller/reminderController.js\"></script>\n");
      out.write("<script src=\"js/service/generatenewAccess.js\"></script>\n");
      out.write("<script src=\"js/controller/pincontroller.js\"></script>\n");
      out.write("<script src=\"bower_components/angular-sanitize/angular-sanitize.js\"></script>\n");
      out.write("<script src=\"bower_components/moment/moment.js\"></script>\n");
      out.write("<!-- fb share  -->\n");
      out.write("<script type=\"text/javascript\" src=\"http://connect.facebook.net/en_US/sdk.js\"></script>\n");
      out.write("\n");
      out.write("<!-- for datetimepicker -->\n");
      out.write("<script src=\"bower_components/angular-bootstrap-datetimepicker/src/js/datetimepicker.js\"></script>\n");
      out.write("<script src=\"bower_components/angular-bootstrap-datetimepicker/src/js/datetimepicker.templates.js\"></script>\n");
      out.write("\n");
      out.write("<script src=\"bower_components/angular-tooltips/dist/angular-tooltips.js\"></script>\n");
      out.write("\n");
      out.write("<!-- for uib modal work -->\n");
      out.write("<script src=\"bower_components/angular-bootstrap/ui-bootstrap-tpls.js\"></script>\n");
      out.write("\n");
      out.write("<!-- for drag and drop using sortable -->\n");
      out.write("<script src=\"bower_components/angular-ui-sortable/sortable.js\"></script>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
