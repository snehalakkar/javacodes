package com.bridgeit.TodoApp.util;

import java.io.IOException;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.bridgeit.TodoApp.DTO.WebScrapper;
import com.bridgeit.TodoApp.Service.ScrapperService;

@Component
public class WebScrapping {
	
	WebScrapper webScrapper=new WebScrapper();
	
	@Autowired
	ScrapperService scrapperService;
	
	public void checkUrlForTitleScrapping(String title) {
		// for checking title as a url
		// fetch the document over HTTP
		Document doc;
		try {
			doc = Jsoup.connect(title).get();
			// get the page title
			String webtitle = doc.title();
			System.out.println("titlefortitle: " + webtitle);

			// get all links in page
			Elements links = doc.select("a[href]");
			for (Element link : links) {
				// get the value from the href attribute
				System.out.println("\nlinkTitle: " + link.attr("href"));
				System.out.println("textTitle: " + link.text());
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void checkUrlForDescScrapping(String description) {
		// for checkinh description as a url
		// fetch the document over HTTP
		Document doc1;
		try {
			doc1 = Jsoup.connect(description).get();
			/* this browseragant thing is important to trick servers into sending us the LARGEST versions of the images */
		    //doc1.userAgent(Constants.BROWSER_USER_AGENT);
		   
			String title = null;
		    Elements metaOgTitle = doc1.select("meta[property=og:title]");
		    System.out.println("metaOgTitle "+metaOgTitle);
		    if (metaOgTitle!=null) {
		        title = metaOgTitle.attr("content");
		        System.out.println("metaOgTitle11 "+title);
		    }
		    else {
		        title = doc1.title();
		    }
	        
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
